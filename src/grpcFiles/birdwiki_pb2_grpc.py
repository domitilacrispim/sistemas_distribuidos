# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from grpcFiles import birdwiki_pb2 as birdwiki__pb2


class BirdWikiStub(object):
    # missing associated documentation comment in .proto file
    pass

    def __init__(self, channel):
        """Constructor.

        Args:
          channel: A grpc.Channel.
        """
        self.greeting = channel.unary_unary(
            '/BirdWiki/greeting',
            request_serializer=birdwiki__pb2.ServerInfo.SerializeToString,
            response_deserializer=birdwiki__pb2.Confirmation.FromString,
        )
        self.listBirds = channel.unary_stream(
            '/BirdWiki/listBirds',
            request_serializer=birdwiki__pb2.BirdName.SerializeToString,
            response_deserializer=birdwiki__pb2.BirdInfo.FromString,
        )
        self.getBird = channel.unary_unary(
            '/BirdWiki/getBird',
            request_serializer=birdwiki__pb2.BirdName.SerializeToString,
            response_deserializer=birdwiki__pb2.BirdInfo.FromString,
        )
        self.createBird = channel.unary_unary(
            '/BirdWiki/createBird',
            request_serializer=birdwiki__pb2.BirdName.SerializeToString,
            response_deserializer=birdwiki__pb2.BirdInfo.FromString,
        )
        self.readBird = channel.unary_unary(
            '/BirdWiki/readBird',
            request_serializer=birdwiki__pb2.BirdName.SerializeToString,
            response_deserializer=birdwiki__pb2.BirdPage.FromString,
        )
        self.editBird = channel.unary_unary(
            '/BirdWiki/editBird',
            request_serializer=birdwiki__pb2.BirdName.SerializeToString,
            response_deserializer=birdwiki__pb2.BirdPage.FromString,
        )
        self.saveBird = channel.unary_unary(
            '/BirdWiki/saveBird',
            request_serializer=birdwiki__pb2.BirdPage.SerializeToString,
            response_deserializer=birdwiki__pb2.Confirmation.FromString,
        )
        self.deleteBird = channel.unary_unary(
            '/BirdWiki/deleteBird',
            request_serializer=birdwiki__pb2.BirdName.SerializeToString,
            response_deserializer=birdwiki__pb2.Confirmation.FromString,
        )


class BirdWikiServicer(object):
    # missing associated documentation comment in .proto file
    pass

    def greeting(self, request, context):
        # missing associated documentation comment in .proto file
        pass
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def listBirds(self, request, context):
        # missing associated documentation comment in .proto file
        pass
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getBird(self, request, context):
        # missing associated documentation comment in .proto file
        pass
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def createBird(self, request, context):
        # missing associated documentation comment in .proto file
        pass
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def readBird(self, request, context):
        # missing associated documentation comment in .proto file
        pass
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def editBird(self, request, context):
        # missing associated documentation comment in .proto file
        pass
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def saveBird(self, request, context):
        # missing associated documentation comment in .proto file
        pass
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def deleteBird(self, request, context):
        # missing associated documentation comment in .proto file
        pass
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BirdWikiServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'greeting': grpc.unary_unary_rpc_method_handler(
            servicer.greeting,
            request_deserializer=birdwiki__pb2.ServerInfo.FromString,
            response_serializer=birdwiki__pb2.Confirmation.SerializeToString,
        ),
        'listBirds': grpc.unary_stream_rpc_method_handler(
            servicer.listBirds,
            request_deserializer=birdwiki__pb2.BirdName.FromString,
            response_serializer=birdwiki__pb2.BirdInfo.SerializeToString,
        ),
        'getBird': grpc.unary_unary_rpc_method_handler(
            servicer.getBird,
            request_deserializer=birdwiki__pb2.BirdName.FromString,
            response_serializer=birdwiki__pb2.BirdInfo.SerializeToString,
        ),
        'createBird': grpc.unary_unary_rpc_method_handler(
            servicer.createBird,
            request_deserializer=birdwiki__pb2.BirdName.FromString,
            response_serializer=birdwiki__pb2.BirdInfo.SerializeToString,
        ),
        'readBird': grpc.unary_unary_rpc_method_handler(
            servicer.readBird,
            request_deserializer=birdwiki__pb2.BirdName.FromString,
            response_serializer=birdwiki__pb2.BirdPage.SerializeToString,
        ),
        'editBird': grpc.unary_unary_rpc_method_handler(
            servicer.editBird,
            request_deserializer=birdwiki__pb2.BirdName.FromString,
            response_serializer=birdwiki__pb2.BirdPage.SerializeToString,
        ),
        'saveBird': grpc.unary_unary_rpc_method_handler(
            servicer.saveBird,
            request_deserializer=birdwiki__pb2.BirdPage.FromString,
            response_serializer=birdwiki__pb2.Confirmation.SerializeToString,
        ),
        'deleteBird': grpc.unary_unary_rpc_method_handler(
            servicer.deleteBird,
            request_deserializer=birdwiki__pb2.BirdName.FromString,
            response_serializer=birdwiki__pb2.Confirmation.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'BirdWiki', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


class LoginUserStub(object):
    # missing associated documentation comment in .proto file
    pass

    def __init__(self, channel):
        """Constructor.

        Args:
          channel: A grpc.Channel.
        """
        self.login = channel.unary_unary(
            '/LoginUser/login',
            request_serializer=birdwiki__pb2.UserLogin.SerializeToString,
            response_deserializer=birdwiki__pb2.UserInfo.FromString,
        )


class LoginUserServicer(object):
    # missing associated documentation comment in .proto file
    pass

    def login(self, request, context):
        # missing associated documentation comment in .proto file
        pass
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_LoginUserServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'login': grpc.unary_unary_rpc_method_handler(
            servicer.login,
            request_deserializer=birdwiki__pb2.UserLogin.FromString,
            response_serializer=birdwiki__pb2.UserInfo.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'LoginUser', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
